ARM GAS  /tmp/ccbWIJUs.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB139:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccbWIJUs.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Definitions for defaultTask */
  47:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  48:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  49:Core/Src/main.c ****   .name = "defaultTask",
  50:Core/Src/main.c ****   .stack_size = 128 * 4,
  51:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  52:Core/Src/main.c **** };
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  61:Core/Src/main.c **** void StartDefaultTask(void *argument);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** void CPP_UserSetup(void);
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccbWIJUs.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_USART2_UART_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c ****   CPP_UserSetup();
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Init scheduler */
 106:Core/Src/main.c ****   osKernelInitialize();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 109:Core/Src/main.c ****   /* add mutexes, ... */
 110:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 113:Core/Src/main.c ****   /* add semaphores, ... */
 114:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 117:Core/Src/main.c ****   /* start timers, add new ones, ... */
 118:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 121:Core/Src/main.c ****   /* add queues, ... */
 122:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Create the thread(s) */
 125:Core/Src/main.c ****   /* creation of defaultTask */
 126:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 129:Core/Src/main.c ****   /* add threads, ... */
 130:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 133:Core/Src/main.c ****   /* add events, ... */
 134:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Start scheduler */
 137:Core/Src/main.c ****   osKernelStart();
 138:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 139:Core/Src/main.c ****   /* Infinite loop */
 140:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 141:Core/Src/main.c ****   while (1)
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     /* USER CODE END WHILE */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccbWIJUs.s 			page 4


 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   /* USER CODE END 3 */
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief System Clock Configuration
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** void SystemClock_Config(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 167:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 168:Core/Src/main.c ****   */
 169:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 179:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 187:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /**
 200:Core/Src/main.c ****   * @brief USART2 Initialization Function
 201:Core/Src/main.c ****   * @param None
 202:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccbWIJUs.s 			page 5


 203:Core/Src/main.c ****   */
 204:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 205:Core/Src/main.c **** {
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 214:Core/Src/main.c ****   huart2.Instance = USART2;
 215:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 216:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 217:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 218:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 219:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 220:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 221:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 222:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 223:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 224:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /**
 235:Core/Src/main.c ****   * @brief GPIO Initialization Function
 236:Core/Src/main.c ****   * @param None
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** static void MX_GPIO_Init(void)
 240:Core/Src/main.c **** {
  28              		.loc 1 240 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 8AB0     		sub	sp, sp, #40
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 241:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 241 3 view .LVU1
  41              		.loc 1 241 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/ccbWIJUs.s 			page 6


  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 242:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 243:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 246:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 246 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 246 3 view .LVU4
  51              		.loc 1 246 3 view .LVU5
  52 0010 214B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 246 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 246 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 246 3 view .LVU8
 247:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  64              		.loc 1 247 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 247 3 view .LVU10
  67              		.loc 1 247 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F08002 		orr	r2, r2, #128
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 247 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F08002 		and	r2, r2, #128
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 247 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 247 3 view .LVU14
 248:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 248 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 248 3 view .LVU16
  82              		.loc 1 248 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 248 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 248 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 248 3 view .LVU20
 249:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 249 3 view .LVU21
ARM GAS  /tmp/ccbWIJUs.s 			page 7


  95              	.LBB7:
  96              		.loc 1 249 3 view .LVU22
  97              		.loc 1 249 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 249 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 249 3 view .LVU25
 106 0058 049B     		ldr	r3, [sp, #16]
 107              	.LBE7:
 108              		.loc 1 249 3 view .LVU26
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 252:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 109              		.loc 1 252 3 view .LVU27
 110 005a 2246     		mov	r2, r4
 111 005c 2021     		movs	r1, #32
 112 005e 4FF09040 		mov	r0, #1207959552
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 255:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 115              		.loc 1 255 3 view .LVU28
 116              		.loc 1 255 23 is_stmt 0 view .LVU29
 117 0066 4FF40053 		mov	r3, #8192
 118 006a 0593     		str	r3, [sp, #20]
 256:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 119              		.loc 1 256 3 is_stmt 1 view .LVU30
 120              		.loc 1 256 24 is_stmt 0 view .LVU31
 121 006c 4FF40413 		mov	r3, #2162688
 122 0070 0693     		str	r3, [sp, #24]
 257:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 257 3 is_stmt 1 view .LVU32
 124              		.loc 1 257 24 is_stmt 0 view .LVU33
 125 0072 0794     		str	r4, [sp, #28]
 258:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 126              		.loc 1 258 3 is_stmt 1 view .LVU34
 127 0074 05A9     		add	r1, sp, #20
 128 0076 0948     		ldr	r0, .L3+4
 129 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL1:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 261:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 131              		.loc 1 261 3 view .LVU35
 132              		.loc 1 261 23 is_stmt 0 view .LVU36
 133 007c 2023     		movs	r3, #32
 134 007e 0593     		str	r3, [sp, #20]
 262:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 135              		.loc 1 262 3 is_stmt 1 view .LVU37
 136              		.loc 1 262 24 is_stmt 0 view .LVU38
 137 0080 0123     		movs	r3, #1
 138 0082 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccbWIJUs.s 			page 8


 263:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 139              		.loc 1 263 3 is_stmt 1 view .LVU39
 140              		.loc 1 263 24 is_stmt 0 view .LVU40
 141 0084 0794     		str	r4, [sp, #28]
 264:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 142              		.loc 1 264 3 is_stmt 1 view .LVU41
 143              		.loc 1 264 25 is_stmt 0 view .LVU42
 144 0086 0894     		str	r4, [sp, #32]
 265:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 145              		.loc 1 265 3 is_stmt 1 view .LVU43
 146 0088 05A9     		add	r1, sp, #20
 147 008a 4FF09040 		mov	r0, #1207959552
 148 008e FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 268:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 269:Core/Src/main.c **** }
 150              		.loc 1 269 1 is_stmt 0 view .LVU44
 151 0092 0AB0     		add	sp, sp, #40
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		@ sp needed
 155 0094 10BD     		pop	{r4, pc}
 156              	.L4:
 157 0096 00BF     		.align	2
 158              	.L3:
 159 0098 00100240 		.word	1073876992
 160 009c 00080048 		.word	1207961600
 161              		.cfi_endproc
 162              	.LFE139:
 164              		.section	.text.StartDefaultTask,"ax",%progbits
 165              		.align	1
 166              		.global	StartDefaultTask
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	StartDefaultTask:
 172              	.LFB140:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /* USER CODE END 4 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 276:Core/Src/main.c **** /**
 277:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 278:Core/Src/main.c ****   * @param  argument: Not used
 279:Core/Src/main.c ****   * @retval None
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 282:Core/Src/main.c **** void StartDefaultTask(void *argument)
 283:Core/Src/main.c **** {
 173              		.loc 1 283 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ Volatile: function does not return.
 176              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccbWIJUs.s 			page 9


 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL3:
 179              		.loc 1 283 1 is_stmt 0 view .LVU46
 180 0000 08B5     		push	{r3, lr}
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 185              	.LVL4:
 186              	.L6:
 284:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 285:Core/Src/main.c ****   /* Infinite loop */
 286:Core/Src/main.c ****   for(;;)
 187              		.loc 1 286 3 is_stmt 1 discriminator 1 view .LVU47
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     osDelay(1);
 188              		.loc 1 288 5 discriminator 1 view .LVU48
 189 0002 0120     		movs	r0, #1
 190 0004 FFF7FEFF 		bl	osDelay
 191              	.LVL5:
 286:Core/Src/main.c ****   {
 192              		.loc 1 286 8 discriminator 1 view .LVU49
 193 0008 FBE7     		b	.L6
 194              		.cfi_endproc
 195              	.LFE140:
 197              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_TIM_PeriodElapsedCallback
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	HAL_TIM_PeriodElapsedCallback:
 205              	.LVL6:
 206              	.LFB141:
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   /* USER CODE END 5 */
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 295:Core/Src/main.c ****   * @note   This function is called  when TIM17 interrupt took place, inside
 296:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 297:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 298:Core/Src/main.c ****   * @param  htim : TIM handle
 299:Core/Src/main.c ****   * @retval None
 300:Core/Src/main.c ****   */
 301:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 302:Core/Src/main.c **** {
 207              		.loc 1 302 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		.loc 1 302 1 is_stmt 0 view .LVU51
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI4:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
ARM GAS  /tmp/ccbWIJUs.s 			page 10


 216              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 306:Core/Src/main.c ****   if (htim->Instance == TIM17) {
 217              		.loc 1 306 3 is_stmt 1 view .LVU52
 218              		.loc 1 306 11 is_stmt 0 view .LVU53
 219 0002 0268     		ldr	r2, [r0]
 220              		.loc 1 306 6 view .LVU54
 221 0004 034B     		ldr	r3, .L12
 222 0006 9A42     		cmp	r2, r3
 223 0008 00D0     		beq	.L11
 224              	.LVL7:
 225              	.L8:
 307:Core/Src/main.c ****     HAL_IncTick();
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 312:Core/Src/main.c **** }
 226              		.loc 1 312 1 view .LVU55
 227 000a 08BD     		pop	{r3, pc}
 228              	.LVL8:
 229              	.L11:
 307:Core/Src/main.c ****     HAL_IncTick();
 230              		.loc 1 307 5 is_stmt 1 view .LVU56
 231 000c FFF7FEFF 		bl	HAL_IncTick
 232              	.LVL9:
 233              		.loc 1 312 1 is_stmt 0 view .LVU57
 234 0010 FBE7     		b	.L8
 235              	.L13:
 236 0012 00BF     		.align	2
 237              	.L12:
 238 0014 00480140 		.word	1073825792
 239              		.cfi_endproc
 240              	.LFE141:
 242              		.section	.text.Error_Handler,"ax",%progbits
 243              		.align	1
 244              		.global	Error_Handler
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 249              	Error_Handler:
 250              	.LFB142:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /**
 315:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 316:Core/Src/main.c ****   * @retval None
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** void Error_Handler(void)
 319:Core/Src/main.c **** {
 251              		.loc 1 319 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ Volatile: function does not return.
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
ARM GAS  /tmp/ccbWIJUs.s 			page 11


 320:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 321:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 322:Core/Src/main.c ****   __disable_irq();
 257              		.loc 1 322 3 view .LVU59
 258              	.LBB8:
 259              	.LBI8:
 260              		.file 2 "../Resources/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/ccbWIJUs.s 			page 12


  51:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccbWIJUs.s 			page 13


 108:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccbWIJUs.s 			page 14


 165:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 261              		.loc 2 207 27 view .LVU60
 262              	.LBB9:
 208:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../Resources/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 263              		.loc 2 209 3 view .LVU61
 264              		.syntax unified
 265              	@ 209 "../Resources/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 266 0000 72B6     		cpsid i
 267              	@ 0 "" 2
 268              		.thumb
 269              		.syntax unified
 270              	.L15:
 271              	.LBE9:
 272              	.LBE8:
ARM GAS  /tmp/ccbWIJUs.s 			page 15


 323:Core/Src/main.c ****   while (1)
 273              		.loc 1 323 3 discriminator 1 view .LVU62
 324:Core/Src/main.c ****   {
 325:Core/Src/main.c ****   }
 274              		.loc 1 325 3 discriminator 1 view .LVU63
 323:Core/Src/main.c ****   while (1)
 275              		.loc 1 323 9 discriminator 1 view .LVU64
 276 0002 FEE7     		b	.L15
 277              		.cfi_endproc
 278              	.LFE142:
 280              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 281              		.align	1
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	MX_USART2_UART_Init:
 287              	.LFB138:
 205:Core/Src/main.c **** 
 288              		.loc 1 205 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292 0000 08B5     		push	{r3, lr}
 293              	.LCFI5:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 214:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 297              		.loc 1 214 3 view .LVU66
 214:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 298              		.loc 1 214 19 is_stmt 0 view .LVU67
 299 0002 0B48     		ldr	r0, .L20
 300 0004 0B4B     		ldr	r3, .L20+4
 301 0006 0360     		str	r3, [r0]
 215:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 302              		.loc 1 215 3 is_stmt 1 view .LVU68
 215:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 303              		.loc 1 215 24 is_stmt 0 view .LVU69
 304 0008 4FF4E133 		mov	r3, #115200
 305 000c 4360     		str	r3, [r0, #4]
 216:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 306              		.loc 1 216 3 is_stmt 1 view .LVU70
 216:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 307              		.loc 1 216 26 is_stmt 0 view .LVU71
 308 000e 0023     		movs	r3, #0
 309 0010 8360     		str	r3, [r0, #8]
 217:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 310              		.loc 1 217 3 is_stmt 1 view .LVU72
 217:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 311              		.loc 1 217 24 is_stmt 0 view .LVU73
 312 0012 C360     		str	r3, [r0, #12]
 218:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 313              		.loc 1 218 3 is_stmt 1 view .LVU74
 218:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 314              		.loc 1 218 22 is_stmt 0 view .LVU75
 315 0014 0361     		str	r3, [r0, #16]
 219:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccbWIJUs.s 			page 16


 316              		.loc 1 219 3 is_stmt 1 view .LVU76
 219:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 317              		.loc 1 219 20 is_stmt 0 view .LVU77
 318 0016 0C22     		movs	r2, #12
 319 0018 4261     		str	r2, [r0, #20]
 220:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 320              		.loc 1 220 3 is_stmt 1 view .LVU78
 220:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 321              		.loc 1 220 25 is_stmt 0 view .LVU79
 322 001a 8361     		str	r3, [r0, #24]
 221:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 323              		.loc 1 221 3 is_stmt 1 view .LVU80
 221:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 324              		.loc 1 221 28 is_stmt 0 view .LVU81
 325 001c C361     		str	r3, [r0, #28]
 222:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 326              		.loc 1 222 3 is_stmt 1 view .LVU82
 222:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 327              		.loc 1 222 30 is_stmt 0 view .LVU83
 328 001e 0362     		str	r3, [r0, #32]
 223:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 329              		.loc 1 223 3 is_stmt 1 view .LVU84
 223:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 330              		.loc 1 223 38 is_stmt 0 view .LVU85
 331 0020 4362     		str	r3, [r0, #36]
 224:Core/Src/main.c ****   {
 332              		.loc 1 224 3 is_stmt 1 view .LVU86
 224:Core/Src/main.c ****   {
 333              		.loc 1 224 7 is_stmt 0 view .LVU87
 334 0022 FFF7FEFF 		bl	HAL_UART_Init
 335              	.LVL10:
 224:Core/Src/main.c ****   {
 336              		.loc 1 224 6 view .LVU88
 337 0026 00B9     		cbnz	r0, .L19
 232:Core/Src/main.c **** 
 338              		.loc 1 232 1 view .LVU89
 339 0028 08BD     		pop	{r3, pc}
 340              	.L19:
 226:Core/Src/main.c ****   }
 341              		.loc 1 226 5 is_stmt 1 view .LVU90
 342 002a FFF7FEFF 		bl	Error_Handler
 343              	.LVL11:
 344              	.L21:
 345 002e 00BF     		.align	2
 346              	.L20:
 347 0030 00000000 		.word	.LANCHOR0
 348 0034 00440040 		.word	1073759232
 349              		.cfi_endproc
 350              	.LFE138:
 352              		.section	.text.SystemClock_Config,"ax",%progbits
 353              		.align	1
 354              		.global	SystemClock_Config
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 359              	SystemClock_Config:
 360              	.LFB137:
ARM GAS  /tmp/ccbWIJUs.s 			page 17


 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 361              		.loc 1 155 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 88
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 00B5     		push	{lr}
 366              	.LCFI6:
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 14, -4
 369 0002 97B0     		sub	sp, sp, #92
 370              	.LCFI7:
 371              		.cfi_def_cfa_offset 96
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 372              		.loc 1 156 3 view .LVU92
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 373              		.loc 1 156 22 is_stmt 0 view .LVU93
 374 0004 4422     		movs	r2, #68
 375 0006 0021     		movs	r1, #0
 376 0008 05A8     		add	r0, sp, #20
 377 000a FFF7FEFF 		bl	memset
 378              	.LVL12:
 157:Core/Src/main.c **** 
 379              		.loc 1 157 3 is_stmt 1 view .LVU94
 157:Core/Src/main.c **** 
 380              		.loc 1 157 22 is_stmt 0 view .LVU95
 381 000e 0023     		movs	r3, #0
 382 0010 0093     		str	r3, [sp]
 383 0012 0193     		str	r3, [sp, #4]
 384 0014 0293     		str	r3, [sp, #8]
 385 0016 0393     		str	r3, [sp, #12]
 386 0018 0493     		str	r3, [sp, #16]
 161:Core/Src/main.c ****   {
 387              		.loc 1 161 3 is_stmt 1 view .LVU96
 161:Core/Src/main.c ****   {
 388              		.loc 1 161 7 is_stmt 0 view .LVU97
 389 001a 4FF40070 		mov	r0, #512
 390 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 391              	.LVL13:
 161:Core/Src/main.c ****   {
 392              		.loc 1 161 6 view .LVU98
 393 0022 20BB     		cbnz	r0, .L27
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 394              		.loc 1 169 3 is_stmt 1 view .LVU99
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 395              		.loc 1 169 36 is_stmt 0 view .LVU100
 396 0024 0223     		movs	r3, #2
 397 0026 0593     		str	r3, [sp, #20]
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 398              		.loc 1 170 3 is_stmt 1 view .LVU101
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 399              		.loc 1 170 30 is_stmt 0 view .LVU102
 400 0028 4FF48072 		mov	r2, #256
 401 002c 0892     		str	r2, [sp, #32]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 402              		.loc 1 171 3 is_stmt 1 view .LVU103
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 403              		.loc 1 171 41 is_stmt 0 view .LVU104
ARM GAS  /tmp/ccbWIJUs.s 			page 18


 404 002e 1022     		movs	r2, #16
 405 0030 0992     		str	r2, [sp, #36]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 406              		.loc 1 172 3 is_stmt 1 view .LVU105
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 407              		.loc 1 172 34 is_stmt 0 view .LVU106
 408 0032 0F93     		str	r3, [sp, #60]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 409              		.loc 1 173 3 is_stmt 1 view .LVU107
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 410              		.loc 1 173 35 is_stmt 0 view .LVU108
 411 0034 1093     		str	r3, [sp, #64]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 412              		.loc 1 174 3 is_stmt 1 view .LVU109
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 10;
 413              		.loc 1 174 30 is_stmt 0 view .LVU110
 414 0036 0122     		movs	r2, #1
 415 0038 1192     		str	r2, [sp, #68]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 416              		.loc 1 175 3 is_stmt 1 view .LVU111
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 417              		.loc 1 175 30 is_stmt 0 view .LVU112
 418 003a 0A22     		movs	r2, #10
 419 003c 1292     		str	r2, [sp, #72]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 420              		.loc 1 176 3 is_stmt 1 view .LVU113
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 421              		.loc 1 176 30 is_stmt 0 view .LVU114
 422 003e 0722     		movs	r2, #7
 423 0040 1392     		str	r2, [sp, #76]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 424              		.loc 1 177 3 is_stmt 1 view .LVU115
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 425              		.loc 1 177 30 is_stmt 0 view .LVU116
 426 0042 1493     		str	r3, [sp, #80]
 178:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 178 3 is_stmt 1 view .LVU117
 178:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 428              		.loc 1 178 30 is_stmt 0 view .LVU118
 429 0044 1593     		str	r3, [sp, #84]
 179:Core/Src/main.c ****   {
 430              		.loc 1 179 3 is_stmt 1 view .LVU119
 179:Core/Src/main.c ****   {
 431              		.loc 1 179 7 is_stmt 0 view .LVU120
 432 0046 05A8     		add	r0, sp, #20
 433 0048 FFF7FEFF 		bl	HAL_RCC_OscConfig
 434              	.LVL14:
 179:Core/Src/main.c ****   {
 435              		.loc 1 179 6 view .LVU121
 436 004c 88B9     		cbnz	r0, .L28
 186:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 437              		.loc 1 186 3 is_stmt 1 view .LVU122
 186:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 438              		.loc 1 186 31 is_stmt 0 view .LVU123
 439 004e 0F23     		movs	r3, #15
 440 0050 0093     		str	r3, [sp]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /tmp/ccbWIJUs.s 			page 19


 441              		.loc 1 188 3 is_stmt 1 view .LVU124
 188:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 442              		.loc 1 188 34 is_stmt 0 view .LVU125
 443 0052 0323     		movs	r3, #3
 444 0054 0193     		str	r3, [sp, #4]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 445              		.loc 1 189 3 is_stmt 1 view .LVU126
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 446              		.loc 1 189 35 is_stmt 0 view .LVU127
 447 0056 0023     		movs	r3, #0
 448 0058 0293     		str	r3, [sp, #8]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 449              		.loc 1 190 3 is_stmt 1 view .LVU128
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 450              		.loc 1 190 36 is_stmt 0 view .LVU129
 451 005a 0393     		str	r3, [sp, #12]
 191:Core/Src/main.c **** 
 452              		.loc 1 191 3 is_stmt 1 view .LVU130
 191:Core/Src/main.c **** 
 453              		.loc 1 191 36 is_stmt 0 view .LVU131
 454 005c 0493     		str	r3, [sp, #16]
 193:Core/Src/main.c ****   {
 455              		.loc 1 193 3 is_stmt 1 view .LVU132
 193:Core/Src/main.c ****   {
 456              		.loc 1 193 7 is_stmt 0 view .LVU133
 457 005e 0421     		movs	r1, #4
 458 0060 6846     		mov	r0, sp
 459 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 460              	.LVL15:
 193:Core/Src/main.c ****   {
 461              		.loc 1 193 6 view .LVU134
 462 0066 30B9     		cbnz	r0, .L29
 197:Core/Src/main.c **** 
 463              		.loc 1 197 1 view .LVU135
 464 0068 17B0     		add	sp, sp, #92
 465              	.LCFI8:
 466              		.cfi_remember_state
 467              		.cfi_def_cfa_offset 4
 468              		@ sp needed
 469 006a 5DF804FB 		ldr	pc, [sp], #4
 470              	.L27:
 471              	.LCFI9:
 472              		.cfi_restore_state
 163:Core/Src/main.c ****   }
 473              		.loc 1 163 5 is_stmt 1 view .LVU136
 474 006e FFF7FEFF 		bl	Error_Handler
 475              	.LVL16:
 476              	.L28:
 181:Core/Src/main.c ****   }
 477              		.loc 1 181 5 view .LVU137
 478 0072 FFF7FEFF 		bl	Error_Handler
 479              	.LVL17:
 480              	.L29:
 195:Core/Src/main.c ****   }
 481              		.loc 1 195 5 view .LVU138
 482 0076 FFF7FEFF 		bl	Error_Handler
 483              	.LVL18:
ARM GAS  /tmp/ccbWIJUs.s 			page 20


 484              		.cfi_endproc
 485              	.LFE137:
 487              		.section	.text.main,"ax",%progbits
 488              		.align	1
 489              		.global	main
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 494              	main:
 495              	.LFB136:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 496              		.loc 1 77 1 view -0
 497              		.cfi_startproc
 498              		@ Volatile: function does not return.
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501 0000 08B5     		push	{r3, lr}
 502              	.LCFI10:
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 3, -8
 505              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 506              		.loc 1 85 3 view .LVU140
 507 0002 FFF7FEFF 		bl	HAL_Init
 508              	.LVL19:
  92:Core/Src/main.c **** 
 509              		.loc 1 92 3 view .LVU141
 510 0006 FFF7FEFF 		bl	SystemClock_Config
 511              	.LVL20:
  99:Core/Src/main.c ****   MX_USART2_UART_Init();
 512              		.loc 1 99 3 view .LVU142
 513 000a FFF7FEFF 		bl	MX_GPIO_Init
 514              	.LVL21:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 515              		.loc 1 100 3 view .LVU143
 516 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 517              	.LVL22:
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 518              		.loc 1 102 3 view .LVU144
 519 0012 FFF7FEFF 		bl	CPP_UserSetup
 520              	.LVL23:
 106:Core/Src/main.c **** 
 521              		.loc 1 106 3 view .LVU145
 522 0016 FFF7FEFF 		bl	osKernelInitialize
 523              	.LVL24:
 126:Core/Src/main.c **** 
 524              		.loc 1 126 3 view .LVU146
 126:Core/Src/main.c **** 
 525              		.loc 1 126 23 is_stmt 0 view .LVU147
 526 001a 054A     		ldr	r2, .L33
 527 001c 0021     		movs	r1, #0
 528 001e 0548     		ldr	r0, .L33+4
 529 0020 FFF7FEFF 		bl	osThreadNew
 530              	.LVL25:
 126:Core/Src/main.c **** 
 531              		.loc 1 126 21 view .LVU148
 532 0024 044B     		ldr	r3, .L33+8
ARM GAS  /tmp/ccbWIJUs.s 			page 21


 533 0026 1860     		str	r0, [r3]
 137:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 534              		.loc 1 137 3 is_stmt 1 view .LVU149
 535 0028 FFF7FEFF 		bl	osKernelStart
 536              	.LVL26:
 537              	.L31:
 141:Core/Src/main.c ****   {
 538              		.loc 1 141 3 discriminator 1 view .LVU150
 146:Core/Src/main.c ****   /* USER CODE END 3 */
 539              		.loc 1 146 3 discriminator 1 view .LVU151
 141:Core/Src/main.c ****   {
 540              		.loc 1 141 9 discriminator 1 view .LVU152
 541 002c FEE7     		b	.L31
 542              	.L34:
 543 002e 00BF     		.align	2
 544              	.L33:
 545 0030 00000000 		.word	.LANCHOR1
 546 0034 00000000 		.word	StartDefaultTask
 547 0038 00000000 		.word	.LANCHOR2
 548              		.cfi_endproc
 549              	.LFE136:
 551              		.global	defaultTask_attributes
 552              		.section	.rodata.str1.4,"aMS",%progbits,1
 553              		.align	2
 554              	.LC0:
 555 0000 64656661 		.ascii	"defaultTask\000"
 555      756C7454 
 555      61736B00 
 556              		.global	defaultTaskHandle
 557              		.global	huart2
 558              		.section	.bss.defaultTaskHandle,"aw",%nobits
 559              		.align	2
 560              		.set	.LANCHOR2,. + 0
 563              	defaultTaskHandle:
 564 0000 00000000 		.space	4
 565              		.section	.bss.huart2,"aw",%nobits
 566              		.align	2
 567              		.set	.LANCHOR0,. + 0
 570              	huart2:
 571 0000 00000000 		.space	132
 571      00000000 
 571      00000000 
 571      00000000 
 571      00000000 
 572              		.section	.rodata.defaultTask_attributes,"a"
 573              		.align	2
 574              		.set	.LANCHOR1,. + 0
 577              	defaultTask_attributes:
 578 0000 00000000 		.word	.LC0
 579 0004 00000000 		.space	16
 579      00000000 
 579      00000000 
 579      00000000 
 580 0014 00020000 		.word	512
 581 0018 18000000 		.word	24
 582 001c 00000000 		.space	8
 582      00000000 
ARM GAS  /tmp/ccbWIJUs.s 			page 22


 583              		.text
 584              	.Letext0:
 585              		.file 3 "/root/Linux-Dev/Car-IV-Firmware/Tools/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/includ
 586              		.file 4 "/root/Linux-Dev/Car-IV-Firmware/Tools/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/includ
 587              		.file 5 "../Resources/Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 588              		.file 6 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 589              		.file 7 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 590              		.file 8 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 591              		.file 9 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 592              		.file 10 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 593              		.file 11 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 594              		.file 12 "../Resources/Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 595              		.file 13 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 596              		.file 14 "../Resources/Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 597              		.file 15 "<built-in>"
ARM GAS  /tmp/ccbWIJUs.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccbWIJUs.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccbWIJUs.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccbWIJUs.s:159    .text.MX_GPIO_Init:0000000000000098 $d
     /tmp/ccbWIJUs.s:165    .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccbWIJUs.s:171    .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccbWIJUs.s:198    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccbWIJUs.s:204    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccbWIJUs.s:238    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccbWIJUs.s:243    .text.Error_Handler:0000000000000000 $t
     /tmp/ccbWIJUs.s:249    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccbWIJUs.s:281    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccbWIJUs.s:286    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccbWIJUs.s:347    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccbWIJUs.s:353    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccbWIJUs.s:359    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccbWIJUs.s:488    .text.main:0000000000000000 $t
     /tmp/ccbWIJUs.s:494    .text.main:0000000000000000 main
     /tmp/ccbWIJUs.s:545    .text.main:0000000000000030 $d
     /tmp/ccbWIJUs.s:577    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccbWIJUs.s:553    .rodata.str1.4:0000000000000000 $d
     /tmp/ccbWIJUs.s:563    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccbWIJUs.s:570    .bss.huart2:0000000000000000 huart2
     /tmp/ccbWIJUs.s:559    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccbWIJUs.s:566    .bss.huart2:0000000000000000 $d
     /tmp/ccbWIJUs.s:573    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
osDelay
HAL_IncTick
HAL_UART_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
CPP_UserSetup
osKernelInitialize
osThreadNew
osKernelStart
